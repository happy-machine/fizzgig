app: fizzgig
service: fizzgig
org: thisisdjfresh

custom:
  secrets: ${file(secrets.json)}

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1
  environment:
    JWT_SECRET: ${self:custom.secrets.JWT_SECRET}
    DB: ${self:custom.secrets.DB}
    ALERT_DELAY_HOURS: ${self:custom.secrets.ALERT_DELAY_HOURS}
    ELASTICACHE_URL: ${self:custom.secrets.ELASTICACHE_URL}
    ALPHA_VANTAGE_API_KEYS: ${self:custom.secrets.ALPHA_VANTAGE_API_KEYS}
    EMAIL_ADDRESS: ${self:custom.secrets.EMAIL_ADDRESS}

package:
  individually: false
  exclude:
    - "./test/**"

functions:
  verify-token:
    handler: functions/auth.auth

  login:
    handler: functions/auth.login
    events:
      - http:
          path: login
          method: post
          cors: true

  register:
    handler: functions/auth.register
    events:
      - http:
          path: register
          method: post
          cors: true

  scheduler:
    handler: functions/scheduler.runScheduler

  getUser:
    handler: functions/userTickers.getUser
    events:
      - http:
          path: userTickers
          method: get
          cors: true
          authorizer: verify-token

  getTicker:
    handler: functions/ticker.fetchTicker
    events:
      - http:
          path: ticker
          method: get
          cors: true
          authorizer: verify-token

  getTickers:
    handler: functions/tickers.fetchTickers
    events:
      - http:
          path: tickers
          method: post
          cors: true

  updateUserTickers:
    handler: functions/userTickers.updateUserTickers
    events:
      - http:
          path: userTickers
          method: put
          cors: true
          authorizer: verify-token

  search:
    handler: functions/search.search
    events:
      - http:
          path: search
          method: get
          cors: true

iamRoleStatements:
  - Effect: "Allow"
    Action:
      - "logs:CreateLogGroup"
      - "logs:CreateLogStream"
      - "logs:PutLogEvents"
      - "ec2:CreateNetworkInterface"
      - "ec2:DeleteNetworkInterface"
      - "ec2:DescribeNetworkInterfaces"
    Resource: "*"
vpc:
  securityGroupIds:
    - sg-1a354858
  subnetIds:
    - subnet-0fa20a31

plugins:
  - serverless-offline
